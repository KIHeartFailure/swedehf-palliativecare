```{r}
#| label: outcomesfunc
#| cache: true
#| cache.comments: false

coxvars <- modvars
coxvars[modvars %in% stratavars] <- paste0("strata(", coxvars[modvars %in% stratavars], ")")

outcomesfunc <- function(data, impdata, impdatanb, time, event, eventname, xvar,
                         rep = FALSE, novars = NULL) {
  coxvars <- setdiff(coxvars, novars)
  modvars <- setdiff(modvars, novars)

  levs <- levels(data %>% pull(!!sym(xvar)))
  nlevs <- length(levs)

  nrows <- 3
  out <- data.frame(matrix(NA, ncol = 2 + nlevs, nrow = nrows))
  colnames(out) <- c("Outcome", "Model", levs)

  out[, 1] <- eventname

  ## incidence rate
  out[1, 2] <- "No events, sum py, events/100py (95% CI)"

  # 1 row - incidence
  if (!rep) {
    ev <- data %>%
      group_by(!!sym(xvar)) %>%
      summarise(
        ev = sum(!!sym(event) == "Yes"),
        s = sum(!!sym(time) / 365.25),
        .groups = "drop"
      )
  }
  if (rep) {
    ev <- data %>%
      group_by(!!sym(xvar)) %>%
      summarise(
        ev = sum(!!sym(event)),
        s = sum(!!sym(time) / 365.25),
        .groups = "drop"
      )
  }

  r <- pois.exact(x = ev$ev, pt = ev$s / 100)

  out[1, 3:(nlevs + 2)] <- paste0(
    ev$ev, ", ",
    fn(ev$s, dig = 0), ", ",
    fn(r$rate, dig = 0), " (",
    fn(r$lower, dig = 0), "-",
    fn(r$upper, dig = 0), ")"
  )

  if (!rep) {
    ## 2 row - crude regression
    out[2, 2] <- "Crude Hazard Ratio (95% CI), p-value"
    mod <- summary(coxph(formula(paste0("Surv(", time, ",", event, "== 'Yes') ~ ", xvar)),
      data = data
    ))

    out[2, 3:(nlevs + 2)] <- c(
      "reference",
      paste0(
        fn(mod$conf.int[, "exp(coef)"], dig = 2),
        " (", fn(mod$conf.int[, "lower .95"], dig = 2),
        "-", fn(mod$conf.int[, "upper .95"], dig = 2), "), ",
        fn(mod$coef[, "Pr(>|z|)"], dig = 3, p = TRUE)
      )
    )

    ## 3 row - adjusted regression
    out[3, 2] <- "Adjusted Hazard Ratio (95% CI), p-value"
    mod <- summary(pool(with(impdata, coxph(formula(paste0(
      "Surv(", time, ",", event, " == 'Yes') ~ ", xvar, "+", paste(coxvars, collapse = " + ")
    ))))))

    out[3, 3:(nlevs + 2)] <- c(
      "reference",
      paste0(
        fn(exp(mod$estimate[1:(nlevs - 1)]), dig = 2),
        " (", fn(exp(mod$estimate[1:(nlevs - 1)] - global_z05 * mod$std.error[1:(nlevs - 1)]), dig = 2),
        "-", fn(exp(mod$estimate[1:(nlevs - 1)] + global_z05 * mod$std.error[1:(nlevs - 1)]), dig = 2), "), ",
        fn(mod$p.value[1:(nlevs - 1)], dig = 3, p = TRUE)
      )
    )
  }

  if (rep) {
    ## 2 row - crude regression
    out[2, 2] <- "Crude Rate Ratio (95% CI), p-value"
    mod <- summary(glm.nb(formula(paste0(event, " ~ ", xvar, " + offset(log(sos_outtime_death))")),
      data = data %>% filter(sos_outtime_death > 0)
    ))

    out[2, 3:(nlevs + 2)] <- c("reference", paste0(
      fn(exp(mod$coefficients[2:nlevs, 1]), dig = 2),
      " (", fn(exp(mod$coefficients[2:nlevs, 1] - global_z05 * mod$coefficients[2:nlevs, 2]), dig = 2),
      "-", fn(exp(mod$coefficients[2:nlevs, 1] + global_z05 * mod$coefficients[2:nlevs, 2]), dig = 2), "), ",
      fn(mod$coefficients[2:nlevs, 4], dig = 3, p = TRUE)
    ))

    ## 3 row - adjusted regression
    mod <- with(impdatanb, glm.nb(formula(paste0(
      event, " ~ ", xvar, " + offset(log(sos_outtime_death)) + ",
      paste0(modvars, collapse = " + ")
    ))))
    mod <- summary(pool(mod))
    out[3, 2] <- "Adjusted Rate Ratio (95% CI), p-value"
    out[3, 3:(nlevs + 2)] <- c("reference", paste0(
      fn(exp(mod$estimate[2:nlevs]), dig = 2),
      " (", fn(exp(mod$estimate[2:nlevs] - global_z05 * mod$std.error[2:nlevs]), dig = 2),
      "-", fn(exp(mod$estimate[2:nlevs] + global_z05 * mod$std.error[2:nlevs]), dig = 2), "), ",
      fn(mod$p.value[2:nlevs], dig = 3, p = TRUE)
    ))
  }
  return(out)
}

outcomesfunc_outer <- function(data, impdata, impdatanb, xvar) {
  out1 <- outcomesfunc(
    data = data,
    impdata = impdata,
    impdatanb = impdatanb,
    time = outvars$time[1],
    event = outvars$var[1],
    eventname = outvars$name[1],
    rep = outvars$rep[1],
    xvar = xvar
  )
  out2 <- outcomesfunc(
    data = data,
    impdata = impdata,
    impdatanb = impdatanb,
    time = outvars$time[2],
    event = outvars$var[2],
    eventname = outvars$name[2],
    rep = outvars$rep[2],
    xvar = xvar
  )
  out3 <- outcomesfunc(
    data = data,
    impdata = impdata,
    impdatanb = impdatanb,
    time = outvars$time[3],
    event = outvars$var[3],
    eventname = outvars$name[3],
    rep = outvars$rep[3],
    xvar = xvar
  )
  out4 <- outcomesfunc(
    data = data,
    impdata = impdata,
    impdatanb = impdatanb,
    time = outvars$time[4],
    event = outvars$var[4],
    eventname = outvars$name[4],
    rep = outvars$rep[4],
    xvar = xvar
  )
  out5 <- outcomesfunc(
    data = data,
    impdata = impdata,
    impdatanb = impdatanb,
    time = outvars$time[5],
    event = outvars$var[5],
    eventname = outvars$name[5],
    rep = outvars$rep[5],
    xvar = xvar
  )
  out6 <- outcomesfunc(
    data = data,
    impdata = impdata,
    impdatanb = impdatanb,
    time = outvars$time[6],
    event = outvars$var[6],
    eventname = outvars$name[6],
    rep = outvars$rep[6],
    xvar = xvar
  )
  nr <- 7
  out7 <- outcomesfunc(
    data = data,
    impdata = impdata,
    impdatanb = impdatanb,
    time = outvars$time[nr],
    event = outvars$var[nr],
    eventname = outvars$name[nr],
    rep = outvars$rep[nr],
    xvar = xvar
  )

  outall <- rbind(out1, out2, out3, out4, out5, out6, out7)

  outallprint <- outall %>%
    mutate(Outcome = if_else(Model == "No events, sum py, events/100py (95% CI)", Outcome, NA))

  make_one_xlsxsheet(outallprint)

  default_kable(outallprint) %>%
    add_header_above(c(" " = 1, " " = 1, "Palliative care" = 2)) %>%
    footnote(
      footnote_order = c("general", "symbol", "alphabet"),
      general_title = "",
      general = c(
        "Abbreviations: No, Number, py, person-years"
      ),
      threeparttable = T
    )
}
```

```{r}
#| label: tbl-outcomes-indicated
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and palliatve care indicated"
#| tbl-pos: "H"

outcomesfunc_outer(data = rsdata, impdata = imprsdata, impdatanb = imprsdata0, xvar = "shf_palliative_indicated")
```

```{r}
#| label: tbl-outcomes-given
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and palliatve care given"
#| tbl-pos: "H"

outcomesfunc_outer(data = rsdata %>% filter(!is.na(shf_palliative_given)), impdata = imprsdata, impdatanb = imprsdata0, xvar = "shf_palliative_given")
```
